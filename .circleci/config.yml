version: 2.1
orbs:
  ruby: circleci/ruby@1.1.2

commands:
  setup:
    steps:
      - checkout
          # path: ~/projects/sakelike
      - ruby/install-deps

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5
        environment:
          - BUNDLER_VERSION: 2.1.4
    # working_directory: ~/projects/sakelike
    steps:
      - setup
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

  test:
    docker:
      - image: circleci/ruby:2.6.5
      - image: circleci/mysql:5.6
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: sakelike_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    # working_directory: ~/projects/sakelike
    steps:
      - setup
      - run:
          name: rails db:migrate
          command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Rubocop
          command: bundle exec rubocop -a
      - run:
          name: Rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

  # deploy:
  #   docker:
  #     - image: circleci/ruby:2.6.5
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         version: 19.03.13
  #     - heroku/install
  #     - run:
  #         name: heroku login
  #         command: heroku container:login
  #     - run:
  #         name: push docker image
  #         command: heroku container:push web -a $HEROKU_APP_NAME
  #     - run:
  #         name: release docker image
  #         command: heroku container:release web -a $HEROKU_APP_NAME
  #     - run:
  #         name: database setup
  #         command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main